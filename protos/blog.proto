syntax = "proto3";
package service;
option go_package = "blog";
import "google/protobuf/timestamp.proto";
import "user.proto";
import "enterprise.proto";

service BlogService {
  rpc CreateBlog (CreateBlogRequest) returns (CreateBlogResponse);
  rpc GetBlog (GetBlogRequest) returns (GetBlogResponse);
  rpc UpdateBlog (UpdateBlogRequest) returns (UpdateBlogResponse);
  rpc DeleteBlog (DeleteBlogRequest) returns (DeleteBlogResponse);
  rpc GetAllBlog (GetAllBlogRequest) returns (GetAllBlogResponse);
}

message Blog {
  string id = 1;
  User user = 2;
  Enterprise enterprise = 3;
  string title = 4;
  string intern_name = 5;
  string position = 6;
  bool is_online = 7;
  int32 join_year = 8;
  int32 wage = 9;
  string job_start_date = 10;
  string job_end_date = 11;
  bool is_event = 12;
  int32 mentor_support_score = 13;
  int32 fun_score = 14;
  int32 content_score = 15;
  google.protobuf.Timestamp      updated_at= 16;
  google.protobuf.Timestamp      created_at= 17;
}

message InternTech {
  string  id = 1;
  Blog blog = 2;
  repeated Language language = 3;
  repeated Framework framework = 4;
  repeated Tool tool = 5;
  repeated string other_skill = 6;
}

enum Language {
  Go = 0;
  Ruby = 1;
  Python = 2;
  PHP = 3;
  JavaScript = 4;
  NodeJS = 5;
  TypeScript = 6;
  HTML_CSS = 7;
  R = 8;
  Java = 9;
  Kotlin = 10;
  Scala = 11;
  Rust = 12;
  Elixir = 13;
  C =  14;
  OTHER = 15;
}

enum Framework {
  React = 0;
  Vue = 1;
  Ruby_on_Rails = 2;
  Flask = 3;
  Django = 4;
  Svelte = 5;
  Express = 6;
  CakePHP = 7;
  Laravel = 8;
  SpringBoot = 9;
  Rocket = 10;
}

enum Tool {
  Git = 0;
  AWS = 1;
  GCP = 2;
  Azure = 3;
  Kubernetes = 4;
  OnPremise = 5;
}

message CreateBlogRequest {
  Blog blog = 1;
}

message CreateBlogResponse {}

message GetBlogRequest {
  string id = 1;
}

message GetBlogResponse {
  Blog blog = 1;
}

message UpdateBlogRequest {
  Blog blog = 1;
}

message UpdateBlogResponse {}

message DeleteBlogRequest {
  string id = 1;
}

message DeleteBlogResponse {}

message GetAllBlogRequest {}

message GetAllBlogResponse {
  repeated Blog blog = 1;
}
